{"version":3,"sources":["Types.ts","Constants.ts","Cards.ts","component/SampleGrid.tsx","component/CardSequence.tsx","Puzzles.ts","component/dedent.tsx","component/Cutscene.tsx","component/LevelDescription.tsx","component/TrackProgress.tsx","component/InteractableButton.tsx","tutorial.ts","component/Album.tsx","component/Board.tsx","component/Intro.tsx","Game.ts","App.js","reportWebVitals.js","index.js"],"names":["StepState","StepAction","STEP_COUNT","GRID_WIDTH","SECONDS_PER_STEP","ApplyPatternToPart","pattern","part","updatedSteps","steps","entries","stepIndex","stepAction","currentStep","INCREMENT","OFF","ON","ACCENT","DECREMENT","MAX","ZERO","SHIFT_UP","SHIFT_RIGHT","SHIFT_DOWN","SHIFT_LEFT","processStep","CardImpl","flavor","title","description","image","sampleTarget","this","G","playerParts","sample","Cards","makeBed","IGNORE","cleanChest","placeBelongings","cobwebs","dust1","dust2","washBedsheets","dryBedsheets","gatherBedsheets","placeBedsheets","layFlat","fold","putAway","drop","mop","sweep","vacuum","emptyTrash","feast","rearrange","bus","rinse","scour","dry","laundry","floor","dishes","PatternRows","classSequence","chunkedGrid","chunk","map","row","rowId","className","cellClass","colId","Paper","variant","PartGrid","parts","currentlyPlayingStep","tabIndex","setTabIndex","remainingProps","safeTabIndex","Math","min","length","cellClasses","take","step","index","key","Tabs","value","onChange","_","newValue","p","Tab","label","style","minWidth","SampleGrid","SFXSampler","Tone","urls","c4","d4","e4","f4","g4","baseUrl","process","toDestination","ActionCard","cardId","cardIndex","buttonLabel","onClickCard","onClickEnabled","viewCard","isSelected","emphasizeButton","leftOffset","card","maybeClassSequence","Card","onClick","marginLeft","CardContent","CardActions","Button","evt","stopPropagation","disabled","CardInteractionReducer","lastState","action","type","renderedCardCount","newCard","selectedCard","cardCount","newClasses","range","i","computeClass","cardClasses","Error","CardSequence","cards","unremovable","didMount","useRef","defaultCardClasses","useReducer","sequenceState","dispatch","useEffect","current","triggerAttackRelease","PlayRandomSFX","TransitionGroup","component","CSSTransition","enter","exit","classNames","timeout","onEnter","onExited","zIndex","LT_PREFIX","Puzzles","albumIndex","introDialogue","speaker","text","levelTrack","targetParts","startingHand","startingSchedule","hints","dedent","l","m","re_whitespace","exec","undefined","replace","RegExp","Cutscene","skip","dialogue","header","song","player","autostart","stop","useState","currentDialogEntry","setCurrentDialogEntry","e","TurnDescription","turn","onDismiss","lastAcknowledgedTurn","setLastAcknowledgedTurn","show","setShow","onClose","puzzle","Modal","open","TrackProgress","progress","max","LinearProgress","InteractableButton","children","tutorialMd","showTutorial","onAcknowledge","remaining","buttonRef","React","anchorEl","setAnchorEl","uniqueId","id","aria-describedby","ref","el","Popper","placement","TUTORIAL","textMarkdown","ALBUMS","Album","acknowledge","album","keyMapper","cy","pitch","duration","bd","ch","sd","sampler","a4","Credits","INTRO_DIALOG","Title","forwardRef","props","Intro","showCutscene","setShowCutscene","handleClose","SetupTurn","oldG","Array","from","newG","playerHand","playerSchedule","hasClearedLevel","forEach","playCard","CheckLevelComplete","targetPartIndex","targetPart","currentPart","MyGame","moves","ctx","handSlot","INVALID_MOVE","splice","unshift","removeCard","playerScheduleSlot","removedCardId","cleanState","inOrderStack","reverse","console","log","replayedCardIndex","replayedCardId","clearSchedule","commitSchedule","events","endTurn","onBegin","GameClient","Client","game","board","overrideTrackBars","overrideBPM","trackBars","bpm","start","npcDialog","setNpcDialog","selectedPart","setSelectedPart","lastCard","partOfLastCard","findIndex","setCurrentlyPlayingStep","lastPlayedStep","setLastPlayedStep","currentTime","setCurrentTime","isPlaying","setIsPlaying","playerActive","setPlayerActive","setPlayer","sequence","setSequence","onStep","time","stepId","play","sequencer","loop","useCallback","currentTutorialStep","setCurrentTutorialStep","stepKey","targetIndex","t","useTutorial","tutorialStep","advanceTutorial","dismissTutorial","displayedAlbum","setDisplayedAlbum","Grid","container","alignItems","justify","item","xs","toFixed","SwitchTransition","join","onViewCard","numPlayers","debug","App","showIntro","setShowIntro","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d3336e1.chunk.js","sourcesContent":["/**\n * This represents the top-level data model of the game.\n * Any concept of global consequence should be declared (but not implemented) here.\n * Because the compiler can traverse the dependency graph just fine, the order of declaration\n * should be for human consumption.\n * Thus, top level concepts are presented first, and their dependencies are declared later.\n */\n\n\n////////////////////////////////\n// Puzzle Configuration\n\nexport interface Puzzle {\n  albumIndex: number;\n  title: string;\n  introDialogue: Array<DialogEntry>;\n  levelTrack: string;\n  // Override the usually constant length of the track.\n  overrideTrackBars?: number;\n  // Override the usually constant bpm.\n  overrideBPM?: number;\n  // The musical composition the player is aiming to replicate.\n  targetParts: Array<Part>;\n  // The cards you start with in your hand.\n  startingHand: Array<CardId>;\n  // Any initial state that cannot be removed.\n  startingSchedule: Array<CardId>;\n  // Any dialog prior to cards being scheduled.\n  hints?: Array<string>;\n}\n\nexport interface Part {\n  sample: string;\n  steps: StepSequence;\n};\n\nexport type StepSequence = Array<StepState>;\n\nexport enum StepState {\n  OFF = 0,\n  ON = 1,\n  ACCENT = 2,\n};\n\n//////////////////////////////////////////////////////////\n// Gameplay State (i.e. when trying to solve the puzzle)\n\n// Keep this serializable for easy state management.\nexport interface GameState extends Puzzle {\n  // The player's current parts.\n  playerParts: Array<Part>;\n  // The player's current hand.\n  playerHand: Array<CardId>;\n  // The player's current schedule.\n  playerSchedule: Array<CardId>;\n  // Whether the player has unlocked the next level.\n  hasClearedLevel: boolean;\n}\n\n// The card identifier is just a string for now. This keeps things serializable.\nexport type CardId = string;\n\n//////////////////////////////////////////////////////////\n// Card Concepts\n\nexport interface CardFlavor {\n  title: string;\n  description: string;\n  image?: string;\n};\n\nexport interface Card extends CardFlavor {\n  // Pattern cards have special UI considerations.\n  sampleTarget?: string;\n  pattern?: Pattern;\n  playCard: CardAction;\n};\n\nexport type Pattern = Array<StepAction>;\n\nexport enum StepAction {\n  INCREMENT,\n  DECREMENT,\n  ZERO,\n  MAX,\n  SHIFT_UP,\n  SHIFT_RIGHT,\n  SHIFT_DOWN,\n  SHIFT_LEFT,\n  IGNORE,\n};\n\nexport type CardAction = (G: GameState) => void;\n\n//////////////////////////////////////////////////////////\n// UX potpourri\n\nexport interface Tutorial {\n  key: string,\n  textMarkdown: string,\n}\n\nexport interface DialogEntry {\n  speaker: string,\n  text: string,\n}","export const GRID_WIDTH: number = 4;\nexport const GRID_HEIGHT: number = 4;\nexport const STEP_COUNT: number = GRID_WIDTH * GRID_HEIGHT;\nexport const DEFAULT_BPM: number = 112;\nexport const DEFAULT_TRACK_BARS: number = 4;\nexport const MAX_HAND_SIZE: number = 6;\nexport const SECONDS_PER_STEP: number = 60.0 / (GRID_WIDTH * DEFAULT_BPM);","import { GRID_WIDTH, STEP_COUNT } from \"./Constants\";\nimport { Card, CardFlavor, GameState, Part, Pattern, StepAction, StepState } from \"./Types\";\n\n// Separate from CardImpl, for UI/preview purposes.\nexport const ApplyPatternToPart: (pattern: Pattern, part: Part) => void = (pattern, part) => {\n  const updatedSteps = [...part.steps];\n  for (const [stepIndex, stepAction] of pattern.entries()) {\n    const processStep: () => StepState = () => {\n      const currentStep = part.steps[stepIndex];\n      switch (stepAction) {\n        case StepAction.INCREMENT:\n          if (currentStep === StepState.OFF) {\n            return StepState.ON;\n          } else {\n            return StepState.ACCENT;\n          }\n        case StepAction.DECREMENT:\n          if (currentStep === StepState.ACCENT) {\n            return StepState.ON;\n          } else {\n            return StepState.OFF;\n          }\n        case StepAction.MAX:\n          return StepState.ACCENT;\n        case StepAction.ZERO:\n          return StepState.OFF;\n        case StepAction.SHIFT_UP:\n          if (stepIndex + GRID_WIDTH > STEP_COUNT) {\n            return StepState.OFF\n          }\n          return part.steps[stepIndex + GRID_WIDTH];\n        case StepAction.SHIFT_RIGHT:\n          if ((stepIndex % GRID_WIDTH) === 0) {\n            return StepState.OFF;\n          }\n          return part.steps[stepIndex - 1];\n        case StepAction.SHIFT_DOWN:\n          if (stepIndex - GRID_WIDTH < 0) {\n            return StepState.OFF;\n          }\n          return part.steps[stepIndex - GRID_WIDTH];\n        case StepAction.SHIFT_LEFT:\n          if ((stepIndex % GRID_WIDTH) + 1 === GRID_WIDTH) {\n            return StepState.OFF;\n          }\n          return part.steps[stepIndex + 1];\n        default:\n          return currentStep;\n      }\n    }\n    updatedSteps[stepIndex] = processStep();\n  }\n  part.steps = updatedSteps;\n}\n\nclass CardImpl implements Card {\n  title: string;\n  description: string;\n  image?: string;\n  sampleTarget?: string;\n  pattern?: Pattern;\n\n  constructor(flavor: CardFlavor, pattern?: Pattern, part?: string) {\n    this.title = flavor.title;\n    this.description = flavor.description;\n    this.image = flavor.image;\n    this.pattern = pattern;\n    this.sampleTarget = part;\n  }\n\n  playCard(G: GameState) {\n    for (const part of G.playerParts) {\n      if (part.sample !== this.sampleTarget) {\n        continue;\n      }\n      if (this.pattern) {\n        ApplyPatternToPart(this.pattern, part);\n      }\n    }\n  }\n}\n\nconst Cards : {[key: string]: Card} = {\n  makeBed: new CardImpl(\n    {\n      title: \"Make Bed\",\n      description: `\n        Good job!\n\n        Pay attention to the order that you’re playing these cards in, or you could really get messed up.\n      `\n    },\n    [\n      StepAction.INCREMENT, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.INCREMENT, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n    ],\n    \"bd\"\n  ),\n  cleanChest: new CardImpl(\n    {\n      title: \"Clean Chest\",\n      description: `\n        Hey, you've found **ACCENTED** beats!\n        \n        A beat can be **NORMAL** or **ACCENTED**, which just means it's being hit harder.\n      `\n    },\n    [\n      StepAction.INCREMENT, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.INCREMENT, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n    ],\n    \"bd\"\n  ),\n  placeBelongings: new CardImpl(\n    {\n      title: \"Place Belongings\",\n      description: `\n        Wonderful! You've got yourself a solid foundation.\n\n        Click **NEXT** to continue to the next level.\n      `\n    },\n    [\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.MAX, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n    ],\n    \"bd\"\n  ),\n  cobwebs: new CardImpl(\n    {\n      title: \"Cobwebs\",\n      description: `\n        Why don't we start by dusting away all these cobwebs?\n\n        They sure are layered pretty thick in these corners.\n      `\n    },\n    [\n      StepAction.MAX, StepAction.INCREMENT, StepAction.INCREMENT, StepAction.MAX,\n      StepAction.INCREMENT, StepAction.INCREMENT, StepAction.INCREMENT, StepAction.INCREMENT,\n      StepAction.INCREMENT, StepAction.INCREMENT, StepAction.INCREMENT, StepAction.INCREMENT,\n      StepAction.MAX, StepAction.INCREMENT, StepAction.INCREMENT, StepAction.MAX,\n    ],\n    \"ch\"\n  ),\n  dust1: new CardImpl(\n    {\n      title: \"Dust 1\",\n      description: `\n        Yep! But, you'll find that practicing now will make you fluent in the long run. \n      `\n    },\n    [\n      StepAction.IGNORE, StepAction.DECREMENT, StepAction.IGNORE, StepAction.DECREMENT,\n      StepAction.IGNORE, StepAction.DECREMENT, StepAction.IGNORE, StepAction.DECREMENT,\n      StepAction.IGNORE, StepAction.DECREMENT, StepAction.IGNORE, StepAction.DECREMENT,\n      StepAction.IGNORE, StepAction.DECREMENT, StepAction.IGNORE, StepAction.DECREMENT,\n    ],\n    \"ch\"\n  ),\n  dust2: new CardImpl(\n    {\n      title: \"Dust 2\",\n      description: `\n        Nice work! But are you ready to put them together?\n        \n        Click ***NEXT*** to continue to the next level.\n      `\n    },\n    [\n      StepAction.DECREMENT, StepAction.IGNORE, StepAction.IGNORE, StepAction.DECREMENT,\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.DECREMENT, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n    ],\n    \"ch\"\n  ),\n  washBedsheets: new CardImpl(\n    {\n      title: \"Wash Bedsheets\",\n      description: `\n        ***Neon:*** Some of these cards have different symbols in the background!\n        \n        Does that mean they affect different grids?\n      `\n    },\n    [\n      StepAction.IGNORE, StepAction.INCREMENT, StepAction.IGNORE, StepAction.INCREMENT,\n      StepAction.IGNORE, StepAction.INCREMENT, StepAction.IGNORE, StepAction.INCREMENT,\n      StepAction.IGNORE, StepAction.INCREMENT, StepAction.IGNORE, StepAction.INCREMENT,\n      StepAction.IGNORE, StepAction.INCREMENT, StepAction.INCREMENT, StepAction.INCREMENT,\n    ],\n    \"ch\"\n  ),\n  dryBedsheets: new CardImpl(\n    {\n      title: \"Dry Bedsheets\",\n      description: `\n        Exactly! Matching the symbol on a card to its respective grid lets you move things around there without messing up the other grid.\n      `\n    },\n    [\n      StepAction.SHIFT_LEFT, StepAction.SHIFT_RIGHT, StepAction.SHIFT_LEFT, StepAction.SHIFT_RIGHT,\n      StepAction.SHIFT_LEFT, StepAction.SHIFT_RIGHT, StepAction.SHIFT_LEFT, StepAction.SHIFT_RIGHT,\n      StepAction.SHIFT_LEFT, StepAction.SHIFT_RIGHT, StepAction.SHIFT_LEFT, StepAction.SHIFT_RIGHT,\n      StepAction.SHIFT_LEFT, StepAction.SHIFT_RIGHT, StepAction.SHIFT_LEFT, StepAction.SHIFT_RIGHT,\n    ],\n    \"ch\"\n  ),\n  gatherBedsheets: new CardImpl(\n    {\n      title: \"Gather Bedsheets\",\n      description: `\n        ***Neon:*** You know, this is getting kind of hard to keep track of what goes where...\n\n        ***Cadence:*** You'll get there. I know you’ll master these grids in no time!\n      `\n    },\n    [\n      StepAction.INCREMENT, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.MAX, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.INCREMENT, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.MAX, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n    ],\n    \"bd\"\n  ),\n  placeBedsheets: new CardImpl(\n    {\n      title: \"Place Bedsheets\",\n      description: `\n        Fantastic! You're picking this up so quickly!\n        \n        Click Next to continue to the next level.\n      `\n    },\n    [\n      StepAction.SHIFT_UP, StepAction.SHIFT_UP, StepAction.SHIFT_UP, StepAction.SHIFT_UP,\n      StepAction.SHIFT_DOWN, StepAction.SHIFT_DOWN, StepAction.SHIFT_DOWN, StepAction.SHIFT_DOWN,\n      StepAction.SHIFT_UP, StepAction.SHIFT_UP, StepAction.SHIFT_UP, StepAction.SHIFT_UP,\n      StepAction.SHIFT_DOWN, StepAction.SHIFT_DOWN, StepAction.SHIFT_DOWN, StepAction.SHIFT_DOWN,\n    ],\n    \"bd\"\n  ),\n  layFlat: new CardImpl(\n    {\n      title: \"Lay Flat\",\n      description: \"Lay your shirt flat on your bed. The foundation of any laundry folding routine.\"\n    },\n    [\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.INCREMENT, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n    ],\n    \"sd\"\n  ),\n  fold: new CardImpl(\n    {\n      title: \"Fold\",\n      description: \"Fold your shirt. Add some complexity! (Assuming you have something to start with...)\"\n    },\n    [\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.INCREMENT, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n    ],\n    \"sd\"\n  ),\n  putAway: new CardImpl(\n    {\n      title: \"Put Away\",\n      description: \"Put away your freshly folded clothes.\"\n    },\n    [\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.MAX, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n    ],\n    \"sd\"\n  ),\n  drop: new CardImpl(\n    {\n      title: \"The Mess\",\n      description: \"Oops! You dropped your [?] all over the floor. What a mess...\"\n    },\n    [\n      StepAction.MAX, StepAction.MAX, StepAction.MAX, StepAction.MAX,\n      StepAction.MAX, StepAction.MAX, StepAction.MAX, StepAction.MAX,\n      StepAction.MAX, StepAction.MAX, StepAction.MAX, StepAction.MAX,\n      StepAction.MAX, StepAction.MAX, StepAction.MAX, StepAction.MAX,\n    ],\n    \"bd\"\n  ),\n  mop: new CardImpl(\n    {\n      title: \"Mop\",\n      description: \"Mop the floor. This mess might be a bit too much to soak up though.\"\n    },\n    [\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.DECREMENT, StepAction.DECREMENT,\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.DECREMENT, StepAction.DECREMENT,\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.DECREMENT, StepAction.DECREMENT,\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.DECREMENT, StepAction.DECREMENT,\n    ],\n    \"bd\"\n  ),\n  sweep: new CardImpl(\n    {\n      title: \"Sweep\",\n      description: \"Sweep the floor. It's a bit hard to get the corners though..\"\n    },\n    [\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.DECREMENT, StepAction.IGNORE,\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.DECREMENT, StepAction.DECREMENT,\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.DECREMENT, StepAction.DECREMENT,\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.DECREMENT, StepAction.IGNORE,\n    ],\n    \"bd\"\n  ),\n  vacuum: new CardImpl(\n    {\n      title: \"Vacuum\",\n      description: \"Suck up whatever is left.\"\n    },\n    [\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.DECREMENT,\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.DECREMENT,\n    ],\n    \"bd\"\n  ),\n  emptyTrash: new CardImpl(\n    {\n      title: \"Empty Trash\",\n      description: \"Those bins were chalk full of [???]! Much better now...\"\n    },\n    [\n      StepAction.IGNORE, StepAction.ZERO, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.IGNORE, StepAction.ZERO, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.IGNORE, StepAction.ZERO, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.IGNORE, StepAction.ZERO, StepAction.IGNORE, StepAction.IGNORE,\n    ],\n    \"bd\"\n  ),\n  feast: new CardImpl(\n    {\n      title: \"Feast\",\n      description: \"What a delicious meal! What are we going to do about all the dishes?\"\n    },\n    [\n      StepAction.INCREMENT, StepAction.INCREMENT, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.INCREMENT, StepAction.INCREMENT, StepAction.IGNORE, StepAction.MAX,\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.MAX, StepAction.IGNORE, StepAction.MAX, StepAction.MAX,\n    ],\n    \"ch\"\n  ),\n  rearrange: new CardImpl(\n    {\n      title: \"Rearrange\",\n      description: \"All the chairs and tables have been moved away from their original places!\"\n    },\n    [\n      StepAction.SHIFT_LEFT, StepAction.SHIFT_UP, StepAction.SHIFT_LEFT, StepAction.SHIFT_UP,\n      StepAction.SHIFT_DOWN, StepAction.SHIFT_UP, StepAction.SHIFT_DOWN, StepAction.SHIFT_UP,\n      StepAction.SHIFT_DOWN, StepAction.SHIFT_UP, StepAction.SHIFT_DOWN, StepAction.SHIFT_UP,\n      StepAction.SHIFT_DOWN, StepAction.SHIFT_RIGHT, StepAction.SHIFT_DOWN, StepAction.SHIFT_RIGHT,\n    ],\n    \"ch\"\n\n  ),\n  bus: new CardImpl(\n    {\n      title: \"Bus\",\n      description: \"What a delicious meal! What are we going to do about all the dishes?\"\n    },\n    [\n      StepAction.SHIFT_LEFT, StepAction.SHIFT_LEFT, StepAction.SHIFT_LEFT, StepAction.SHIFT_UP,\n      StepAction.SHIFT_DOWN, StepAction.IGNORE, StepAction.IGNORE, StepAction.SHIFT_UP,\n      StepAction.SHIFT_DOWN, StepAction.IGNORE, StepAction.IGNORE, StepAction.SHIFT_UP,\n      StepAction.SHIFT_DOWN, StepAction.SHIFT_RIGHT, StepAction.SHIFT_RIGHT, StepAction.SHIFT_RIGHT,\n    ],\n    \"ch\"\n  ),\n  rinse: new CardImpl(\n    {\n      title: \"Rinse\",\n      description: \"Rinse the dishes. This will make them easier to clean.\"\n    },\n    [\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.SHIFT_LEFT, StepAction.SHIFT_UP, StepAction.SHIFT_LEFT, StepAction.SHIFT_UP,\n      StepAction.SHIFT_DOWN, StepAction.SHIFT_RIGHT, StepAction.SHIFT_DOWN, StepAction.SHIFT_RIGHT,\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n    ],\n    \"ch\"\n  ),\n  scour: new CardImpl(\n    {\n      title: \"Scour\",\n      description: \"Scour the dishes. Really put your back into it.\"\n    },\n    [\n      StepAction.SHIFT_LEFT, StepAction.SHIFT_RIGHT, StepAction.SHIFT_LEFT, StepAction.SHIFT_RIGHT,\n      StepAction.SHIFT_LEFT, StepAction.SHIFT_UP, StepAction.SHIFT_UP, StepAction.SHIFT_RIGHT,\n      StepAction.SHIFT_DOWN, StepAction.SHIFT_RIGHT, StepAction.SHIFT_LEFT, StepAction.SHIFT_DOWN,\n      StepAction.SHIFT_LEFT, StepAction.SHIFT_RIGHT, StepAction.SHIFT_LEFT, StepAction.SHIFT_RIGHT,\n    ],\n    \"ch\"\n  ),\n  dry: new CardImpl(\n    {\n      title: \"Dry\",\n      description: \"Let the dishes dry. What a lovely sight!\"\n    },\n    [\n      StepAction.SHIFT_LEFT, StepAction.SHIFT_RIGHT, StepAction.SHIFT_LEFT, StepAction.SHIFT_RIGHT,\n      StepAction.SHIFT_LEFT, StepAction.SHIFT_RIGHT, StepAction.SHIFT_LEFT, StepAction.SHIFT_RIGHT,\n      StepAction.SHIFT_LEFT, StepAction.SHIFT_RIGHT, StepAction.SHIFT_LEFT, StepAction.SHIFT_RIGHT,\n      StepAction.SHIFT_LEFT, StepAction.SHIFT_RIGHT, StepAction.SHIFT_LEFT, StepAction.SHIFT_RIGHT,\n\n    ],\n    \"ch\"\n  ),\n  laundry: new CardImpl(\n    {\n      title: \"Laundry\",\n      description: \"Do the laundry. You know how!\"\n    },\n    [\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.MAX, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.MAX, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n    ],\n    \"sd\"\n  ),\n  floor: new CardImpl(\n    {\n      title: \"Floor\",\n      description: \"Clean the floor. You know how!\"\n    },\n    [\n      StepAction.INCREMENT, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.INCREMENT, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.INCREMENT, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n      StepAction.INCREMENT, StepAction.IGNORE, StepAction.IGNORE, StepAction.IGNORE,\n    ],\n    \"bd\"\n  ),\n  dishes: new CardImpl(\n    {\n      title: \"Dishes\",\n      description: \"Do the dishes. You know how!\"\n    },\n    [\n      StepAction.INCREMENT, StepAction.IGNORE, StepAction.MAX, StepAction.IGNORE,\n      StepAction.INCREMENT, StepAction.IGNORE, StepAction.MAX, StepAction.IGNORE,\n      StepAction.INCREMENT, StepAction.IGNORE, StepAction.MAX, StepAction.IGNORE,\n      StepAction.INCREMENT, StepAction.IGNORE, StepAction.MAX, StepAction.IGNORE,\n    ],\n    \"ch\"\n  )\n};\n\nexport default Cards;","import React from 'react';\n\nimport {\n  Paper,\n  Tab,\n  Tabs,\n} from '@material-ui/core';\n\nimport {\n  chunk,\n  take,\n} from 'lodash';\n\nimport {\n  GRID_WIDTH,\n  STEP_COUNT,\n} from '../Constants';\nimport { Part, StepSequence, StepState } from '../Types';\n\nexport function PatternRows(\n  { classSequence, ...remainingProps } : React.HTMLAttributes<HTMLElement> & {\n    classSequence: Array<string>,\n  }\n) {\n  const chunkedGrid: Array<Array<string>> = chunk(classSequence, GRID_WIDTH);\n  return <>\n    {\n    chunkedGrid.map((row: Array<string>, rowId: number) => (\n      <tr key={\"row \" + rowId} className=\"row\">\n      {\n        row.map((cellClass: string, colId: number) => {\n          return (\n            <td key={\"col \" + colId} className={cellClass}>\n              <Paper className=\"step\" variant=\"outlined\"/>\n            </td>\n          );\n        })\n      }\n      </tr>\n    ))\n    }\n  </>;\n};\n\nfunction PartGrid(\n  { parts, currentlyPlayingStep, tabIndex, setTabIndex, ...remainingProps }: React.HTMLAttributes<HTMLElement> & {\n    parts: Array<Part>, currentlyPlayingStep: number | null, tabIndex: number, setTabIndex: any\n  }\n)\n{\n  // Workaround to make us resistant to non-atomic updates of tabIndex and parts between levels.\n  const safeTabIndex = Math.min(parts.length - 1, tabIndex);  \n  const {\n    steps,\n    sample,\n  } = parts[safeTabIndex];\n  const truncatedSteps: StepSequence = take(steps, STEP_COUNT);\n  const cellClasses: Array<string> = truncatedSteps.map((step: StepState, index: number) => {\n    let cellClass = \"cell \";\n    cellClass += StepState[step] as string + \" \";\n    if (currentlyPlayingStep !== null && index === currentlyPlayingStep % STEP_COUNT) {\n      cellClass += \"playing\";\n    }\n    return cellClass;\n  });\n\n  return (\n    <table {...remainingProps} key={safeTabIndex}>\n      <caption>\n        <Tabs\n          variant=\"fullWidth\"\n          value={safeTabIndex}\n          onChange={(_, newValue: number) => setTabIndex(newValue)}\n          className=\"part-selector\"\n        >\n          {\n            parts.map((p: Part, index: number) =>\n              <Tab\n                key={\"tab \" + index}\n                label={p.sample}\n                style={{ minWidth: 48 }}\n              />\n            )\n          }\n        </Tabs>\n      </caption>\n      <tbody className={sample}>\n        <PatternRows\n          classSequence={cellClasses}\n        />\n      </tbody>\n    </table>\n  );\n}\n\nexport default function SampleGrid(\n  { parts, currentlyPlayingStep, tabIndex, setTabIndex, ...remainingProps }: React.HTMLAttributes<HTMLElement> & {\n    parts: Array<Part>, currentlyPlayingStep: number | null, tabIndex: number, setTabIndex: any\n  }\n) {\n  return <>\n    <PartGrid\n      parts={parts}\n      tabIndex={tabIndex}\n      setTabIndex={setTabIndex}\n      currentlyPlayingStep={currentlyPlayingStep}\n      {...remainingProps}\n    />\n  </>\n};","import { Button, Card, CardActions, CardContent } from \"@material-ui/core\";\nimport { range, sample } from \"lodash\";\nimport { ReactElement, useEffect, useReducer, useRef } from \"react\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport * as Tone from \"tone\";\n\nimport Cards from '../Cards';\nimport { MAX_HAND_SIZE } from \"../Constants\";\nimport { CardId, StepAction } from \"../Types\";\nimport { PatternRows } from \"./SampleGrid\";\n\nconst SFXSampler = new Tone.Sampler({\n  urls: {\n    c4: \"1.ogg\",\n    d4: \"2.ogg\",\n    e4: \"3.ogg\",\n    f4: \"4.ogg\",\n    g4: \"5.ogg\",\n  },\n  baseUrl: process.env.PUBLIC_URL + \"/samples/cards/\"\n}).toDestination();\n\nfunction PlayRandomSFX() {\n  SFXSampler.triggerAttackRelease(sample([\n    \"c4\", \"d4\", \"e4\", \"f4\", \"g4\"\n  ])??\"c4\", 0.2);\n}\n\nexport function ActionCard({\n  cardId, cardIndex, buttonLabel, onClickCard, onClickEnabled, viewCard, isSelected, emphasizeButton,\n  leftOffset\n}: {\n  cardId: CardId, cardIndex: number, buttonLabel: string, onClickCard: any,\n  onClickEnabled: boolean, viewCard: any, isSelected: boolean, emphasizeButton: boolean,\n  leftOffset: number\n} & React.HTMLAttributes<HTMLDivElement>) : ReactElement\n{\n  const card = Cards[cardId];\n  const maybeClassSequence = card.pattern?.map(\n    (stepAction: StepAction) => \"cell \" + StepAction[stepAction] as string\n  );\n  return <Card\n    variant=\"outlined\"\n    className={\"card \" + card.sampleTarget + (isSelected ? \" selected\" : \"\")}\n    onClick={viewCard}\n    style={{\n      marginLeft: leftOffset + \"px\"\n    }}\n  >\n    <CardContent>\n      {maybeClassSequence && \n        <table className=\"pattern\">\n          <tbody>\n            <PatternRows\n              classSequence={maybeClassSequence}\n            />\n          </tbody>\n        </table>\n      }\n    </CardContent> \n    <CardActions>\n      {onClickEnabled ? \n        <Button\n          variant=\"contained\"\n          onClick={(evt) => {\n            onClickCard(cardIndex);\n            evt.stopPropagation();\n          }}\n          disabled={!isSelected}\n          className={emphasizeButton ? \"emphasis\" : \"\"}\n        >\n          {buttonLabel}\n        </Button>         \n        :\n        <div className=\"card-fixed\">\n          FIXED\n        </div>\n      }\n    </CardActions>\n  </Card>;\n};\n\nexport function EmptyCardSlot(): ReactElement {\n  return <Card variant=\"outlined\" className=\"card empty\">\n    <CardContent>\n      &nbsp;\n    </CardContent> \n  </Card>\n}\n\ninterface CardInteraction {\n  type: string;\n  value?: any;\n};\n\ninterface SequenceState {\n  selectedCard: number;\n  cardClasses: Array<any>;\n  cardCount: number;\n  renderedCardCount: number; \n};\n\nconst CardInteractionReducer: (lastState: SequenceState, action: CardInteraction) => SequenceState =\n  (lastState: SequenceState, action: CardInteraction) => {\n    switch (action.type) {\n      // These two transitions are purely for tracking transient animation states.\n      case 'enter':\n        return {\n          ...lastState,\n          renderedCardCount: lastState.renderedCardCount + 1,\n        };\n      case 'exited':\n        return {\n          ...lastState,\n          renderedCardCount: lastState.renderedCardCount - 1,\n        };\n      // This is the race-safe implementation for how to handle card selections.\n      case 'select-card': {\n        const newCard = action.value !== lastState.selectedCard ? action.value : (\n          action.value < lastState.cardCount - 1 ? \n            action.value + 1 : 0 \n        );\n        const computeClass: (i: number) => string = (i) => {\n          if (i < newCard) {\n            return \"displace\";\n          } else {\n            return \"show\";\n          }\n        };\n        const newClasses = range(MAX_HAND_SIZE).map((i) => \"card-\" + computeClass(i));\n        return {\n          ...lastState,\n          cardClasses: newClasses,\n          selectedCard: newCard,\n        }\n      }\n      case 'reset': {\n        return {\n          ...action.value,\n          // Preserve the rendered card count?\n          renderedCardCount: lastState.renderedCardCount\n        };\n      }\n      default:\n        throw new Error(\"Unrecognized action.\");\n    }\n};\n\nexport default function CardSequence({\n  cards, buttonLabel, onClickCard, unremovable, className, emphasizeButton, ...remainingProps\n}: {\n  cards: Array<CardId>, buttonLabel: string, onClickCard: any, unremovable: number, emphasizeButton: boolean\n} & React.HTMLAttributes<HTMLDivElement>) {\n  const didMount = useRef(false);\n  const defaultCardClasses = range(MAX_HAND_SIZE).map(() => 'card-show');\n  const [sequenceState, dispatch] = useReducer(CardInteractionReducer, {\n    cardCount: cards.length,\n    selectedCard: 0,\n    cardClasses: defaultCardClasses,\n    renderedCardCount: cards.length,\n  });\n  // Sometimes we have an inbound update to cards that we need to reconcile with our controlled\n  // sequence state... Just reset.\n  useEffect(() => {\n    if (cards.length !== sequenceState.cardCount) {\n      dispatch({\n        type: \"reset\",\n        value: {\n          cardCount: cards.length,\n          selectedCard: 0,\n          cardClasses: defaultCardClasses,\n        }\n      })\n    }\n  }, [cards.length, defaultCardClasses, sequenceState.cardCount])\n  useEffect(() => {\n    if (didMount.current) {\n      // Don't play on first mount.\n      PlayRandomSFX();\n    } else {\n      didMount.current = true;\n    }\n  }, [sequenceState.selectedCard, cards.length]);\n  return <div className={\"sequence \" + className}>\n    <TransitionGroup component={null}>\n    {\n    cards.map((cardId: CardId, index: number) => \n      <CSSTransition\n        key={cardId}\n        enter={true}\n        exit={true}\n        classNames=\"card\"\n        timeout={200}\n        onEnter={() => dispatch({type: 'enter', value: cards.length})}\n        onExited={() => dispatch({type: 'exited', value: cards.length})}\n      >\n        <div\n          className={\"card-slot \" + sequenceState.cardClasses[index]}\n          style={{\n            zIndex: MAX_HAND_SIZE - index,\n          }}\n        >\n          <ActionCard\n            cardId={cardId}\n            cardIndex={index}\n            buttonLabel={buttonLabel}\n            onClickCard={() => onClickCard(index)}\n            onClickEnabled={cards.length - index > unremovable}\n            viewCard={() => {\n              dispatch({\n                type: \"select-card\",\n                value: index,\n              });\n            }}\n            isSelected={index === sequenceState.selectedCard}\n            emphasizeButton={emphasizeButton}\n            leftOffset={18 * (MAX_HAND_SIZE - sequenceState.renderedCardCount - 1)}\n          />\n          { cards.length - index > unremovable &&\n            <div className=\"card-order\" onClick={() => dispatch({type: \"select-card\", value: index,})}>\n              {cards.length - index - unremovable}\n            </div> \n          }\n        </div>\n      </CSSTransition>\n    )\n    }\n    </TransitionGroup>\n  </div>;\n};","import { Puzzle, StepState } from \"./Types\";\n\nconst LT_PREFIX = process.env.PUBLIC_URL + \"/samples/levels/\";\nconst Puzzles: Array<Puzzle> = [\n  { \n    albumIndex: 0,\n    title: \"The Baseline Bass\",\n    introDialogue: [\n      {\n        speaker: \"cadence\",\n        text: `\n          We'll start simple.\n        `\n      },\n      {\n        speaker: \"cadence\",\n        text: `\n          The first step to any rhythm is the foundation you build on.\n        `\n      }\n    ],\n    levelTrack: `${LT_PREFIX}1_1.ogg`,\n    targetParts: [\n      {\n        sample: \"bd\",\n        steps: [\n          StepState.ACCENT, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.ON, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.ACCENT, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.ON, StepState.OFF, StepState.OFF, StepState.OFF,\n        ]\n      }\n    ],\n    startingHand: [\n      \"makeBed\",\n      \"cleanChest\",\n      \"placeBelongings\",\n    ],\n    startingSchedule: [],\n    hints: [\n      \"Use the cards in your hand to modify those beats on your grid.\",\n      \"See if you can't make your grid look like mine.\"\n    ],\n  },\n  {\n    albumIndex: 0,\n    title: \"Hi Hat Flavor\",\n    introDialogue: [\n      {\n        speaker: \"neon\",\n        text: \"Okay, that's my foundation. We can move on, right?\"\n      },\n      {\n        speaker: \"cadence\",\n        text: \"Patience, Neon. There's still more to teach.\"\n      }\n    ],\n    levelTrack: `${LT_PREFIX}1_1.ogg`,\n    targetParts: [\n      {\n        sample: \"ch\",\n        steps: [\n          StepState.ON, StepState.OFF, StepState.ON, StepState.OFF,\n          StepState.ON, StepState.OFF, StepState.ON, StepState.OFF,\n          StepState.ON, StepState.OFF, StepState.ON, StepState.OFF,\n          StepState.ON, StepState.OFF, StepState.ON, StepState.ON,\n        ]\n      }\n    ],\n    startingHand: [\n      \"dust1\",\n      \"dust2\",\n    ],\n    startingSchedule: [\n      \"cobwebs\",\n    ],\n    hints: [\n      \"Use the cards in your hand to modify those beats on your grid.\",\n      \"See if you can't make your grid look like mine.\",\n      \"***Neon:*** Hey didn't I just do this?\"\n    ],\n  },\n  {\n    albumIndex: 0,\n    title: \"Combination Station\",\n    introDialogue: [\n      {\n        speaker: \"neon\",\n        text: \"Alright, hit me with your next shot!\"\n      },\n      {\n        speaker: \"cadence\",\n        text: \"You’re doing great. But how will you do when you have *two* grids to work with?\"\n      }\n    ],\n    levelTrack: `${LT_PREFIX}1_1.ogg`,\n    targetParts: [\n      {\n        sample: \"ch\",\n        steps: [\n          StepState.ON, StepState.OFF, StepState.ON, StepState.OFF,\n          StepState.ON, StepState.OFF, StepState.ON, StepState.OFF,\n          StepState.ON, StepState.OFF, StepState.ON, StepState.OFF,\n          StepState.ON, StepState.OFF, StepState.ON, StepState.ON,\n        ]\n      },\n      {\n        sample: \"bd\",\n        steps: [\n          StepState.ACCENT, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.ON, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.ACCENT, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.ON, StepState.OFF, StepState.OFF, StepState.OFF,\n        ]\n      }\n\n    ],\n    startingHand: [\n      \"washBedsheets\",\n      \"dryBedsheets\",\n      \"gatherBedsheets\",\n      \"placeBedsheets\",\n    ],\n    startingSchedule: [\n    ],\n    hints: [\n      \"Here, both of your grids need to match both of mine before we can move on.\",\n      \"You can switch between them with the buttons labelled ***SD*** and ***CH*** above the grid.\",\n      \"What are ***CH*** and ***BD*** short for? Well that's a secret ^_^.\"\n    ]\n  },\n  {\n    albumIndex: 0,\n    title: 'The REAL Fun',\n    introDialogue: [\n      {\n        speaker: \"neon\",\n        text: \"The *real* fun? Were we having fake fun before?\"\n      },\n      {\n        speaker: \"cadence\",\n        text: \"It's just a saying, Neon. Are you ready?\"\n      },\n    ],\n    levelTrack: `${LT_PREFIX}1_1.ogg`,\n    targetParts: [\n      {\n        sample: \"ch\",\n        steps: [\n          StepState.ON, StepState.OFF, StepState.ACCENT, StepState.OFF,\n          StepState.ON, StepState.OFF, StepState.ACCENT, StepState.OFF,\n          StepState.ON, StepState.OFF, StepState.ACCENT, StepState.OFF,\n          StepState.ON, StepState.OFF, StepState.ACCENT, StepState.OFF,\n        ],\n      },\n    ],\n    startingHand: [\n      \"bus\",\n      \"rinse\",\n      \"rearrange\",\n      \"dry\",\n      \"scour\",\n    ],\n    startingSchedule: [\n      \"feast\",\n    ],\n    hints: [\n      \"Don't let it overwhelm you!\",\n      \"Each piece is doing exactly what we've done before, it's just a matter of application.\",\n      \"Can you keep up?\"\n    ],\n  },\n  {\n    albumIndex: 0,\n    title: \"To Be Continued...\",\n    introDialogue: [\n      {\n        speaker: \"cadence\",\n        text: \"Thanks for playing!\"\n      },\n      {\n        speaker: \"neon\",\n        text: \"I guess the credits and acknowledgments go here?\"\n      },\n      {\n        speaker: \"cadence\",\n        text: \"Sure. This project was built with [ReactJS](https://reactjs.org/) and [boardgame.io](https://boardgame.io/).\"\n      },\n      {\n        speaker: \"cadence\",\n        text: \"Many general purpose icons and UI components were from [Material UI](https://material-ui.com/).\"\n      },\n      {\n        speaker: \"neon\",\n        text: \"Oh! And the source code and raw assets live on [GitHub](https://github.com/shaoster/mfgj202106).\"\n      },\n      {\n        speaker: \"neon\",\n        text: \"Thanks for playing!\"\n      }\n\n    ],\n    levelTrack: `${LT_PREFIX}1_2.ogg`,\n    targetParts: [\n      {\n        sample: \"sd\",\n        steps: [\n          StepState.OFF, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.ACCENT, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.OFF, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.ACCENT, StepState.OFF, StepState.OFF, StepState.OFF,\n        ],\n      },\n      {\n        sample: \"bd\",\n        steps: [\n          StepState.ACCENT, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.ON, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.ACCENT, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.ON, StepState.OFF, StepState.OFF, StepState.OFF,\n        ],\n      },\n      {\n        sample: \"ch\",\n        steps: [\n          StepState.ON, StepState.OFF, StepState.ACCENT, StepState.OFF,\n          StepState.ON, StepState.OFF, StepState.ACCENT, StepState.OFF,\n          StepState.ON, StepState.OFF, StepState.ACCENT, StepState.OFF,\n          StepState.ON, StepState.OFF, StepState.ACCENT, StepState.OFF,\n        ],\n      },\n    ],\n    startingHand:  [\n    ],\n    startingSchedule: [\n    ],\n    hints: [\n      \"To be continued...\"\n    ],\n  },\n  /*\n  // 0\n  {\n    title: \"The Dojo\",\n    introDialogue: [\n      \"Hello, Neon...\",\n      \"We have been eagerly awaiting your arrival at the <???> Dojo.\",\n      \"I am <???>, and I have been tasked with guiding you to your living quarters.\",\n      \"Your training shall begin shortly, but why don't you first get settled in?\"\n    ],\n    levelTrack: `${LT_PREFIX}unmixed_1_1_88_bpm.ogg`,\n    targetParts: [\n      {\n        sample: \"ch\",\n        steps: [\n          StepState.ON, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.OFF, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.ACCENT, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.OFF, StepState.OFF, StepState.OFF, StepState.OFF,\n        ]\n      }\n    ],\n    startingHand: [\n      \"makeBed\",\n      \"cleanChest\",\n    ],\n    startingSchedule: [],\n  },\n  */\n  /*\n  {\n    title: \"The Laundry\",\n    introDialogue: [\n      \"Hey Neon, are you settled in yet?\",\n      \"I'm [???] and I'm a specialist in [???].\",\n      \"Your training starts today.\"\n    ],\n    levelTrack: `${LT_PREFIX}unmixed_1_1_88_bpm.ogg`,\n    targetParts: [\n      {\n        sample: \"sd\",\n        steps: [\n          StepState.OFF, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.ACCENT, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.OFF, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.ACCENT, StepState.OFF, StepState.OFF, StepState.OFF,\n        ],\n      },\n    ],\n    startingHand: [\n      \"layFlat\",\n      \"fold\",\n      \"putAway\"\n    ],\n    startingSchedule: [],\n    hints: [\n      \"Why don't we get started by doing the laundry?\",\n      \"**PLACE** items from your **To-Do** list on your **Schedule** and get to work!\",\n    ],\n  },\n  // 1\n  // 2\n  // 3\n  {\n    title: \"Putting it All Together\",\n    introDialogue: [\n      \"Wow, all the tables and dishes look great!\",\n      \"You've worked hard.\",\n      \"It's time to meet the master...\"\n    ],\n    levelTrack: `${LT_PREFIX}unmixed_1_all_88_bpm.ogg`,\n    overrideTrackBars: 12,\n    targetParts: [\n      {\n        sample: \"sd\",\n        steps: [\n          StepState.OFF, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.ACCENT, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.OFF, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.ACCENT, StepState.OFF, StepState.OFF, StepState.OFF,\n        ],\n      },\n      {\n        sample: \"bd\",\n        steps: [\n          StepState.ON, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.ON, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.ON, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.ON, StepState.OFF, StepState.OFF, StepState.OFF,\n        ],\n      },\n      {\n        sample: \"ch\",\n        steps: [\n          StepState.ON, StepState.OFF, StepState.ACCENT, StepState.OFF,\n          StepState.ON, StepState.OFF, StepState.ACCENT, StepState.OFF,\n          StepState.ON, StepState.OFF, StepState.ACCENT, StepState.OFF,\n          StepState.ON, StepState.OFF, StepState.ACCENT, StepState.OFF,\n        ],\n      },\n    ],\n    startingHand: [\n      \"laundry\",\n      \"floor\",\n      \"dishes\",\n    ],\n    startingSchedule: [],\n    hints: [\n      \"Show me what you've done today!\"\n    ]\n  },\n  {\n    title: \"Day 2\",\n    introDialogue: [\n      \"After the tutorial.\",\n    ],\n    levelTrack: `${LT_PREFIX}unmixed_2_1_112_bpm.ogg`,\n    overrideBPM: 112,\n    targetParts: [\n      {\n        sample: \"bd\",\n        steps: [\n          StepState.ON, StepState.ON, StepState.OFF, StepState.OFF,\n          StepState.OFF, StepState.ON, StepState.OFF, StepState.ON,\n          StepState.OFF, StepState.ON, StepState.OFF, StepState.ON,\n          StepState.OFF, StepState.OFF, StepState.ON, StepState.OFF,\n        ],\n      },\n      {\n        sample: \"sd\",\n        steps: [\n          StepState.OFF, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.ACCENT, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.OFF, StepState.OFF, StepState.OFF, StepState.OFF,\n          StepState.ON, StepState.OFF, StepState.OFF, StepState.OFF,\n        ],\n      },\n      {\n        sample: \"ch\",\n        steps: [\n          StepState.ACCENT, StepState.ACCENT, StepState.ACCENT, StepState.ACCENT,\n          StepState.OFF, StepState.ACCENT, StepState.ON, StepState.ON,\n          StepState.ACCENT, StepState.ON, StepState.ON, StepState.ON,\n          StepState.OFF, StepState.ON, StepState.ACCENT, StepState.ON,\n        ],\n      },\n    ],\n    startingHand: [\n    ],\n    startingSchedule: [\n    ],\n    hints: [\n      \"Things are starting to get hard...\",\n    ],\n  },\n  */\n];\n\nexport default Puzzles;","/* From https://gist.github.com/malthe/02350255c759d5478e89 */\nexport function dedent(text: string): string {\n  var re_whitespace = /^([ \\t]*)(.*)\\n/gm;\n  var l, m, i;\n\n  while ((m = re_whitespace.exec(text)) !== null) {\n    if (!m[2])\n      continue;\n\n    /*eslint no-cond-assign: 0*/\n    if (l = m[1].length) {\n      i = (i !== undefined) ? Math.min(i, l) : l;\n    } else\n      break;\n  }\n\n  if (i)\n    text = text.replace(new RegExp('^[ \\t]{' + i + '}(.*\\n)', 'gm'), '$1');\n\n  return text;\n}\n","import { Button, Paper } from \"@material-ui/core\";\nimport { take } from \"lodash\";\nimport { ReactElement, useEffect, useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { DialogEntry } from \"../Types\";\nimport * as Tone from \"tone\";\nimport { dedent } from \"./dedent\";\n\nexport function Cutscene({skip, dialogue, header, song} : {skip: any, dialogue: Array<DialogEntry>, header?: ReactElement, song?: string}) {\n  useEffect(() => {\n    const player = new Tone.Player(process.env.PUBLIC_URL + \"/samples/scene/\" + song).toDestination();\n    player.autostart = true;\n    return () => { player.stop() }\n  }, [song]);\n  const [currentDialogEntry, setCurrentDialogEntry] = useState(0);\n  const next = (e: any) => {\n    e.stopPropagation();\n    if (currentDialogEntry + 1 < dialogue.length) {\n      setCurrentDialogEntry(currentDialogEntry + 1);\n      return;\n    }\n  };\n  return <Paper variant=\"outlined\" className=\"cutscene\" onClick={next}>\n      <div className=\"cutscene-body\">\n        {header ? header : <></>}\n        <div className=\"continue-or-skip\">\n          { currentDialogEntry + 1 < dialogue.length ?\n            <>\n            Click anywhere to continue or\n            <Button variant=\"contained\" onClick={skip}>\n              Skip\n            </Button>\n            </>\n          : <Button variant=\"contained\" onClick={skip}>\n              Continue\n            </Button>\n          }\n        </div>\n        <hr/>\n        {take(dialogue, currentDialogEntry + 1).map(\n          (e: DialogEntry, i) => <ReactMarkdown\n            className={\"dialog \" + e.speaker + (i === currentDialogEntry ? \" current\" : \"\")}\n          >\n            {dedent(e.text)}\n          </ReactMarkdown>\n        )}\n        <div className=\"continue-or-skip\">\n          { currentDialogEntry + 1 >= dialogue.length && <Button variant=\"contained\" onClick={skip}>\n              Continue\n            </Button>\n          }\n        </div>\n      </div>\n  </Paper>;\n}","import { Modal, Paper } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport Puzzles from \"../Puzzles\";\nimport { Cutscene } from \"./Cutscene\";\n\n// Automatically opens when description is updated.\nexport default function TurnDescription({turn, onDismiss} : {turn: number, onDismiss: any}) {\n  const [lastAcknowledgedTurn, setLastAcknowledgedTurn] = useState(turn);\n  const [show, setShow] = useState(true);\n  useEffect(() => {\n    if (turn !== lastAcknowledgedTurn) {\n      setShow(true);\n    }\n  }, [lastAcknowledgedTurn, turn]);\n  const onClose = () => {\n    setShow(false);\n    setLastAcknowledgedTurn(turn);\n    onDismiss();\n  };\n  const puzzle = Puzzles[turn - 1];\n  return <Modal open={show} onClose={onClose} onClick={onClose}>\n    <Cutscene \n      skip={onClose} \n      dialogue={puzzle.introDialogue}\n      header={<h1>{puzzle.title}</h1>}\n      song={puzzle.levelTrack}\n    />\n  </Modal>;\n}","import { LinearProgress } from \"@material-ui/core\";\n\nexport default function TrackProgress({progress, max}: {progress: number | null, max: number}) {\n  return <LinearProgress className=\"progress-bar\" variant=\"determinate\" value={\n    100.0 * (progress === null ? 0 : progress + 1) / max\n  }/>;\n}","import { Button, ButtonProps, Paper, Popper } from \"@material-ui/core\";\nimport { uniqueId } from \"lodash\";\nimport React, { MutableRefObject, useEffect, useRef, useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { dedent } from \"./dedent\";\n\nexport default function InteractableButton(\n  {children, onClick, tutorialMd, showTutorial, onAcknowledge, className, ...remaining} :\n  {children: React.ReactNode | undefined, onClick: any, tutorialMd: string | undefined, showTutorial: boolean, onAcknowledge: any} & ButtonProps)\n{\n  const buttonRef : MutableRefObject<HTMLButtonElement | null> = useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n  const [id] = useState(uniqueId());\n  useEffect(() => {\n    if (buttonRef.current) {\n      setAnchorEl(buttonRef.current);\n    }\n  }, [buttonRef])\n  return <>\n    <Button\n      {...remaining}\n      className={showTutorial ? (className ? `${className} glow` : 'glow') : className}\n      aria-describedby={id}\n      ref={buttonRef}\n      onClick={(el: any) => {\n        onClick();\n        onAcknowledge();\n      }}\n    >\n      {children}\n    </Button>\n    <Popper\n      id={id}\n      anchorEl={anchorEl}\n      placement=\"bottom\"\n      open={showTutorial} \n    >\n      <Paper className=\"tutorial-popper\">\n        <div className=\"up-arrow\">&nbsp;</div>\n        <ReactMarkdown>\n          {dedent(tutorialMd ?? \"\")}\n        </ReactMarkdown>\n      </Paper>\n    </Popper>\n  </>;\n}\n","import { useState } from \"react\";\nimport { Tutorial } from \"./Types\";\n\nconst TUTORIAL: Array<Tutorial> = [\n  {\n    key: \"start-stop\",\n    textMarkdown: `\n      Click here to replay the steps in the current grid or to stop if the music is already playing.\n\n      Notice the sounds (or lack thereof) made when the steps light up below!\n    `\n  },\n  {\n    key: \"goal\",\n    textMarkdown: `\n      Didn't quite catch what pattern you were supposed to match?\n\n      Click here to see and hear it again!\n    `\n  },\n  {\n    key: \"current\",\n    textMarkdown: `\n      Want to switch back to what your current pattern looks like while the music is playing?\n\n      Click this button to swap back to your current pattern!\n\n      Try switching back and forth between **MY PARTS** and **GOAL**!\n    `\n  },\n  {\n    key: \"reset\",\n    textMarkdown: `\n      Next, try clicking **PLACE** on the cards to the left.\n\n      Notice how they are added to the schedule on the right?\n\n      In both the **TO-DO** and **Schedule**, you can click on the body of the cards to flip through them.\n\n      (This becomes critical on later levels when order matters!)\n\n      Also notice that you can **REMOVE** any cards you **PLACE**.\n\n      Click **RESET** here to restore the level to its original state and continue.\n    `\n  },\n  {\n    key: \"next\",\n    textMarkdown: `\n      That's pretty much it for the tutorial!\n\n      Once you've clicked **PLACE** on all the cards in your **TO-DO**, the **NEXT** button will light up.\n\n      When you think you've got a pretty good handle on what these buttons do, click **NEXT** to continue.\n    `\n  }\n];\n\nexport function useTutorial() : [\n  Tutorial | undefined,\n  (stepKey? : string) => void,\n  () => void,\n] {\n    // TODO: Extract this somewhere else?\n  const [currentTutorialStep, setCurrentTutorialStep] = useState<number>(-1);\n  const advance = (stepKey?: string) => {\n    if (typeof(stepKey) !== 'undefined') {\n      const targetIndex = TUTORIAL.findIndex((t) => t.key === stepKey) + 1;\n      if (targetIndex === currentTutorialStep + 1) {\n        setCurrentTutorialStep(targetIndex);\n      }\n      return;\n    }\n    setCurrentTutorialStep(0);\n  }\n  const dismiss = () => {\n    setCurrentTutorialStep(-1);\n  }\n\n  return [\n    currentTutorialStep >= 0 ? TUTORIAL[currentTutorialStep] : undefined,\n    advance,\n    dismiss,\n  ];\n}\n","import { Modal } from \"@material-ui/core\";\nimport { Cutscene } from \"./Cutscene\";\n\nconst ALBUMS = [\n  {\n    title: \"Mastering Rhythm\",\n    dialogue: [\n      {\n        speaker: \"neon\",\n        text: \"Master Cadence, I’ve traveled too far to come here. I *demand* that you teach me rhythm.\"\n      },\n      {\n        speaker: \"cadence\",\n        text: \"Well **that's** a fine ‘good morning’. What's your name?\"\n      },\n      {\n        speaker: \"neon\",\n        text: \"It's Neon, lady.\"\n      },\n      {\n        speaker: \"cadence\",\n        text: \"Well, Neon, I’m afraid I can't teach you anything new without fixing what you already have.\"\n      },\n      {\n        speaker: \"neon\",\n        text: \"Wh… huh?\"\n      },\n      {\n        speaker: \"cadence\",\n        text: \"Step inside, we’ve got a lot of work to do.\"\n      },\n    ]\n  },\n  {\n    title: \"The Real Fun\",\n    dialogue: [\n      {\n        speaker: \"neon\",\n        text: \"The real fun? Were we having fake fun before?\"\n      },\n      {\n        speaker: \"cadence\",\n        text: \"It's just a saying, Neon. Are you ready?\"\n      }\n    ]\n  }\n];\n\nfunction Album({index, acknowledge} : {index: number, acknowledge: any}) {\n  const album = ALBUMS[index];\n  return <Modal open={true} onClose={acknowledge} onClick={acknowledge}>\n    <Cutscene\n      skip={acknowledge}\n      dialogue={album.dialogue}\n      header={<h1>Album {index + 1}: {album.title}</h1>}\n      song=\"1_full.ogg\"\n    />\n  </Modal>;\n}\n\nexport default Album;","import {\n  BoardProps \n} from 'boardgame.io/react'\n\nimport {\n  Grid,\n} from '@material-ui/core';\n\nimport CardSequence from './CardSequence';\nimport SampleGrid from './SampleGrid';\nimport { GameState, StepState } from '../Types';\nimport { range } from 'lodash';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { DEFAULT_BPM, DEFAULT_TRACK_BARS, SECONDS_PER_STEP, STEP_COUNT } from '../Constants';\nimport * as Tone from 'tone';\nimport { Time } from 'tone/build/esm/core/type/Units';\nimport LevelDescription from './LevelDescription';\nimport TrackProgress from './TrackProgress';\nimport { Player, Sequence } from 'tone';\nimport { CSSTransition, SwitchTransition } from 'react-transition-group';\nimport Cards from '../Cards';\nimport ReactMarkdown from 'react-markdown';\nimport InteractableButton from './InteractableButton';\nimport { dedent } from './dedent';\nimport { useTutorial } from '../tutorial';\nimport Album from './Album';\n\nconst keyMapper: { [key: string]: {pitch: string, duration: string}} = {\n  cy: {\n    pitch: \"f4\",\n    duration: \"2n\",\n  },\n  bd: {\n    pitch: \"e4\",\n    duration: \"16n\",\n  },\n  ch: {\n    pitch: \"d4\",\n    duration: \"16n\",\n  },\n  sd: {\n    pitch: \"c4\",\n    duration: \"16n\",\n  }\n};\n\nconst sampler = new Tone.Sampler({\n  urls: {\n    // Cymbal\n    f4: \"CY/E808_CY-12[short].ogg\",\n    // Bass Drum\n    e4: \"BD/E808_BD[short]-03.wav\",\n    // Closed Hat\n    d4: \"CH/E808_CH-06.wav\",\n    // Snare\n    c4: \"SD/E808_SD-07.wav\",\n    // Clear level\n    a4: \"../levels/clear.ogg\",\n  },\n  baseUrl: process.env.PUBLIC_URL + \"/samples/808/\"\n}).toDestination();\n\nexport default function Board({\n  G, ctx, moves  \n} : React.HTMLAttributes<HTMLElement> & BoardProps<GameState>)\n{\n  const {\n    title,\n    hasClearedLevel,\n    hints,\n    levelTrack,\n    playerParts,\n    targetParts,\n    playerHand,\n    playerSchedule,\n    startingSchedule,\n    overrideTrackBars,\n    overrideBPM,\n    albumIndex,\n  } = G;\n  const trackBars = overrideTrackBars ?? DEFAULT_TRACK_BARS;\n  const bpm = overrideBPM ?? DEFAULT_BPM;\n  useEffect(() => {\n    Tone.Transport.bpm.value = bpm;\n    Tone.start();\n    Tone.Transport.start();\n    return () => {\n      Tone.Transport.stop();\n    }\n  }, [bpm]);\n  const [npcDialog, setNpcDialog] = useState(hints);\n  const [selectedPart, setSelectedPart] = useState(0);\n  useEffect(() => {\n    // On new level or card played/removed.\n    if (playerSchedule.length === startingSchedule.length) {\n      setNpcDialog(hints);\n    }\n    if (playerSchedule.length > 0) {\n      const lastCard = Cards[playerSchedule[0]];\n      const partOfLastCard = playerParts.findIndex((e) => e.sample === lastCard.sampleTarget);\n      if (partOfLastCard >= 0) {\n        setSelectedPart(partOfLastCard);\n      }\n    }\n  }, [hints, playerParts, playerSchedule, startingSchedule.length]);\n  const [currentlyPlayingStep, setCurrentlyPlayingStep] = useState<number | null>(null);\n  const [lastPlayedStep, setLastPlayedStep] = useState<number | null>(null);\n  const [currentTime, setCurrentTime] = useState<Time | undefined>(undefined);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [playerActive, setPlayerActive] = useState(true);\n  const [player, setPlayer] = useState<Player | null>(null);\n  const [sequence, setSequence] = useState<Sequence | null>(null);\n  const onStep = (time: Time, stepId: number) => {\n    // This is a bit subtle: time has to be set before step.\n    // Only step triggers the sample side effect.\n    setCurrentTime(time);\n    setCurrentlyPlayingStep(stepId);\n  };\n  const play = () => {\n    if (isPlaying) {\n      return;\n    }\n    const sequencer = new Tone.Sequence(\n      onStep,\n      // One extra beat to resolve animations.\n      range(STEP_COUNT * trackBars + 1),\n      \"16n\"\n    );\n    // Just to prevent overlap.\n    stop();\n    setSequence(sequencer);\n    const player = new Tone.Player(\n      levelTrack,\n      () => {\n        setIsPlaying(true);\n        Tone.start();\n        sequencer.loop = false;\n        sequencer.start();\n      }\n    ).toDestination();\n    setPlayer(player);\n    player.loop = false;\n    player.autostart = true;\n  };\n  const stop = useCallback(() => {\n    if (!isPlaying) {\n      return;\n    }\n    setCurrentTime(undefined);\n    setLastPlayedStep(null);\n    setCurrentlyPlayingStep(null);\n    sequence?.stop();\n    setSequence(null);\n    player?.stop();\n    setPlayer(null);\n    setIsPlaying(false);\n    setPlayerActive(true);\n  }, [isPlaying, sequence, player]);\n  const [tutorialStep, advanceTutorial, dismissTutorial] = useTutorial();\n  useEffect(() => {\n    setSelectedPart(0);\n    if (ctx.turn > 1) {\n      sampler.triggerAttackRelease(\"a4\", 4);\n    }\n  }, [ctx.turn]);\n\n  useEffect(() => {\n    if (ctx.turn > 1) {\n      dismissTutorial();\n    }\n  }, [ctx.turn, dismissTutorial])\n\n  useEffect(() => {\n    if (lastPlayedStep === currentlyPlayingStep) {\n      return;\n    }\n    if(typeof currentTime === 'undefined') {\n      return;\n    }\n    if (currentlyPlayingStep === null) {\n      return;\n    }\n    if (!isPlaying) {\n      return;\n    }\n    if (currentlyPlayingStep >= (STEP_COUNT * trackBars)) {\n      stop();\n      return;\n    }\n    setLastPlayedStep(currentlyPlayingStep);\n    // stepIndex selects from our step sequencer, which is only 16th notes on repeat.\n    const stepIndex = currentlyPlayingStep % STEP_COUNT;\n    const parts = playerActive ? playerParts : targetParts;\n    for (let part of parts) {\n      if (part.steps[stepIndex] !== StepState.OFF) {\n        sampler.triggerAttackRelease(\n          keyMapper[part.sample].pitch, \n          keyMapper[part.sample].duration,\n          currentTime,\n          part.steps[stepIndex] / 2\n        );\n      }\n    }\n  }, [currentTime, playerParts, targetParts, currentlyPlayingStep, lastPlayedStep, playerActive, isPlaying, stop, trackBars])\n  const onViewCard = (i: number) => {\n    const selectedCard = Cards[playerHand[i]];\n    if (selectedCard) {\n      setNpcDialog([selectedCard.description]);\n    }\n  };\n  // Show Album info if we haven't yet.\n  const [displayedAlbum, setDisplayedAlbum] = useState(-1);\n  if (albumIndex > displayedAlbum) {\n    return <Album index={albumIndex} acknowledge={() => setDisplayedAlbum(albumIndex)}/>;\n  }\n  return <Grid container className=\"game-board\" alignItems=\"center\" justify=\"center\">\n    <LevelDescription\n      key={\"ld:\" + ctx.turn}\n      turn={ctx.turn}\n      onDismiss={() => {\n        // On a new level, play the target first.\n        setPlayerActive(false);\n        play();\n        if (ctx.turn === 1) {\n          advanceTutorial();\n        }\n      }}\n    />\n    <Grid item xs={12} key=\"title\">\n      <h1>{title}</h1>\n    </Grid>\n    <Grid item xs={3} className=\"pc-area portrait-area\" key=\"pc-area\">\n      <div className=\"pc portrait\">\n        &nbsp;\n      </div>\n    </Grid>\n    <Grid item xs={6} className=\"parts-area\">\n      <Grid container className=\"parts\" justify=\"center\" key=\"parts\">\n        <Grid item xs={1} key=\"time-elapsed\">\n          {isPlaying && \n            <span>\n              {((currentlyPlayingStep ?? 0)  * SECONDS_PER_STEP).toFixed(1)}\n            </span>\n          }\n        </Grid>\n        <Grid item xs={10} key=\"progress\">\n          <TrackProgress progress={currentlyPlayingStep} max={trackBars * STEP_COUNT} />\n        </Grid>\n        <Grid item xs={1} key=\"time-remaining\">\n          {isPlaying && \n            <span>\n              {(((trackBars * STEP_COUNT) - (currentlyPlayingStep ?? 0))  * SECONDS_PER_STEP).toFixed(1)}\n            </span>\n          }\n        </Grid>\n        <Grid item xs={5} className=\"my-parts\">\n          <InteractableButton\n            variant=\"contained\"\n            disabled={playerActive}\n            className={playerActive ? \"selected\" : \"\"}\n            showTutorial={tutorialStep?.key === \"current\"}\n            tutorialMd={tutorialStep?.textMarkdown}\n            onClick={() => {\n              setPlayerActive(true);\n              play();\n            }}\n            onAcknowledge={() => advanceTutorial(\"current\")}\n          >\n            My Parts\n          </InteractableButton>\n        </Grid>\n        <Grid item xs={2} className=\"start-stop\" key=\"start-stop\">\n          <InteractableButton\n            key={isPlaying ? \"stop\" : \"play\"}\n            className={isPlaying ? \"stop\" : \"play\"}\n            onClick={isPlaying ? stop : play}\n            tutorialMd={tutorialStep?.textMarkdown}\n            showTutorial={tutorialStep?.key === \"start-stop\"}\n            onAcknowledge={() => advanceTutorial(\"start-stop\")} \n          >\n            &nbsp;\n          </InteractableButton>\n        </Grid>\n        <Grid item xs={5} className=\"target-parts\">\n          <InteractableButton\n            variant=\"contained\"\n            disabled={!playerActive}\n            className={!playerActive ? \"selected\" : \"\"}\n            onClick={() => {\n              setPlayerActive(false);\n              play();\n            }}\n            tutorialMd={tutorialStep?.textMarkdown}\n            showTutorial={tutorialStep?.key === \"goal\"}\n            onAcknowledge={() => advanceTutorial(\"goal\")} \n          >\n            Goal \n          </InteractableButton>\n        </Grid>\n        <Grid item xs={12} className=\"current-parts\">\n          <SwitchTransition>\n            <CSSTransition\n              key={playerActive ? \"current\": \"target\"}\n              timeout={200}\n              classNames={playerActive ? \"current\": \"target\"}\n            >\n              <SampleGrid\n                parts={playerActive ? playerParts : targetParts}\n                currentlyPlayingStep={currentlyPlayingStep}\n                className={\"sampler \" + (playerActive ? \"current\" : \"target\")}\n                tabIndex={selectedPart}\n                setTabIndex={setSelectedPart}\n              />\n            </CSSTransition>\n          </SwitchTransition>\n        </Grid>\n      </Grid>\n      <Grid item xs={12} className=\"dialogue\">\n        { typeof(npcDialog) !== 'undefined' && \n          <div className=\"dialogue-wrapper\">\n            <ReactMarkdown className=\"dialogue-text\" children={dedent(npcDialog.join('\\n\\n'))}/>\n          </div>\n        }\n      </Grid>\n    </Grid>\n    <Grid item xs={3} className=\"npc-area portrait-area\" key=\"npc-area\">\n      <div className=\"npc portrait\">\n        &nbsp;\n      </div>\n    </Grid>\n    <Grid item xs={5} className=\"hand-area\" key=\"hand-area\">\n      <div className=\"label\">\n        <h3>To-Do</h3>\n      </div>\n      <CardSequence\n        key={\"hand:\" + ctx.turn}\n        cards={playerHand}\n        onClickCard={(i: number) => {\n          moves.playCard(i);\n          setPlayerActive(true);\n          play();\n          onViewCard(i);\n        }}\n        buttonLabel=\"Place\"\n        className=\"hand\"\n        unremovable={0}\n        emphasizeButton={!hasClearedLevel && tutorialStep?.key === \"reset\"}\n      />\n    </Grid>\n    <Grid item xs={2} className=\"next-day\" key=\"next-day\">\n      <Grid container>\n        <Grid item xs={12}>\n          <InteractableButton\n            variant=\"contained\"\n            onClick={moves.clearSchedule}\n            tutorialMd={tutorialStep?.textMarkdown}\n            showTutorial={tutorialStep?.key === \"reset\"}\n            onAcknowledge={() => advanceTutorial(\"reset\")} \n          >\n            Reset\n          </InteractableButton>\n        </Grid>\n        <Grid item xs={12} className=\"break\"></Grid>\n        <Grid item xs={12}>\n          <InteractableButton\n            variant=\"contained\"\n            onClick={\n              () => {\n                moves.commitSchedule();\n                stop();\n              }\n            }\n            disabled={!G.hasClearedLevel}\n            className={G.hasClearedLevel ? \"glow\" : \"\"}\n            showTutorial={tutorialStep?.key === \"next\"}\n            tutorialMd={tutorialStep?.textMarkdown}\n            onAcknowledge={() => advanceTutorial(\"next\")}\n          >\n            next\n          </InteractableButton>\n        </Grid>\n      </Grid>\n    </Grid>\n    <Grid item xs={5} className=\"schedule-area\" key=\"schedule-area\">\n      <div className=\"label\">\n        <h3>Schedule</h3>\n      </div>\n      <CardSequence\n        key={\"schedule:\" + ctx.turn}\n        cards={playerSchedule}\n        onClickCard={(i: number) => {\n          moves.removeCard(i);\n          play();\n        }}\n        buttonLabel=\"Remove\"\n        className=\"schedule\"\n        unremovable={G.startingSchedule.length}\n        emphasizeButton={tutorialStep?.key === \"reset\"}\n      />\n    </Grid>\n  </Grid>;\n}","import { Modal, Paper } from \"@material-ui/core\";\nimport { forwardRef } from \"react\";\nimport { useState } from \"react\";\nimport { Cutscene } from \"./Cutscene\";\n\nfunction Credits() {\n  return <div className=\"credits\">\n    <p>Programming & Dev Lead: @shaoster</p>\n    <p>Sound Design: @SoundFont+</p>\n    <p>Art and Writing: @soupsong</p>\n    <p><em>Made for My First Game Jam: Summer 2021</em></p>\n  </div>;\n}\n\nconst INTRO_DIALOG = [\n  {\n    speaker: \"neon\",\n    text: \"I don't get it, Avery! I'm a musical genius, top of my class and top of my game, making new music should be easy! But no matter what I do, nothing good comes out. I just feel so stuck...\"\n  },\n  {\n    speaker: \"avery\",\n    text: \"Maybe you should see Master Cadence?\"\n  },\n  {\n    speaker: \"neon\",\n    text: \"What?\"\n  },\n  {\n    speaker: \"avery\",\n    text: \"Rhythm Master Cadence, she lives kind of clo--\",\n  },\n  {\n    speaker: \"neon\",\n    text: \"I *know* who Master Cadence is, and I'm not going to get her help. Do I look like a baby to you?\",\n  },\n  {\n    speaker: \"avery\",\n    text: \"N-- No, no! I just thought that if you needed help, going back to basics would be a good place to sta--\"\n  },\n  {\n    speaker: \"neon\",\n    text: \"*Help?* I'm *fine* by myself! If your idea of 'help' is sending me to someone who’s going to teach me my *quarter notes*, just leave now.\"\n  },\n  {\n    speaker: \"avery\",\n    text: \"...Yeah, okay. I'll leave. When you *do* realize you need help, go to Master Cadence, since I can't do anything else for you.\"\n  },\n  {\n    speaker: \"avery\",\n    text: \"Goodbye, Neon.\"\n  },\n  {\n    speaker: \"neon\",\n    text: \"Wait-- No, wait, Avery, I didn't mean it!! I'm sorry, I-- Hey, don't--!! Leave me… Alright Master Cadence, where are you?\"\n  },\n];\n\nconst Title = forwardRef((props, ref) => {\n  return <Paper variant=\"outlined\" className=\"intro\" ref={ref}>\n    <div className=\"intro-body\">\n      <h1>The Neon Slide</h1>\n      <h3>A game about finding your sound</h3>\n      <h3>(and getting out of that funk!!!)</h3>\n      <p><em>Press Escape or click/tap anywhere to continue...</em></p>\n    </div>\n    <Credits/>\n  </Paper>;\n});\n\nexport default function Intro({show, acknowledge}: {show: boolean, acknowledge: any}) {\n  const [showCutscene, setShowCutscene] = useState(false);\n  const handleClose = () => {\n    if (showCutscene) {\n      acknowledge();\n      return;\n    }\n    setShowCutscene(true);\n  }\n  return <Modal open={show} onClose={handleClose} onClick={handleClose}>\n    {\n      showCutscene ? \n        <Cutscene\n          skip={acknowledge}\n          dialogue={INTRO_DIALOG}\n          song=\"2_full.ogg\"\n        /> :\n        <Title/>\n    }\n  </Modal>;\n}","import { Ctx, Game } from 'boardgame.io';\n\nimport Puzzles from './Puzzles';\nimport Cards from './Cards';\n\nimport { STEP_COUNT } from './Constants';\nimport { GameState, Part, StepSequence, StepState } from './Types';\nimport { INVALID_MOVE } from 'boardgame.io/core';\nimport { reverse } from 'lodash';\n\n\nexport const FLIP:string = \"flip\";\n\nconst EmptyPart: () => StepSequence = () => Array.from({length: STEP_COUNT}, () => StepState.OFF);\n\nconst SetupTurn = (turn: number, oldG?: GameState) => {\n  const puzzle = Puzzles[turn - 1];\n  const playerParts: Array<Part> = puzzle.targetParts.map(\n    (part: Part) => ({\n      sample: part.sample,\n      steps: EmptyPart()\n    })\n  );\n  const newG = {\n    // Immutable stuff.\n    ...puzzle,\n    // Changing stuff.\n    playerParts,\n    playerHand: [...puzzle.startingHand],\n    playerSchedule: [...(puzzle.startingSchedule ?? [])],\n    hasClearedLevel: oldG?.hasClearedLevel ?? false,\n  };\n  // Apply any fixed cards.\n  (puzzle.startingSchedule ?? []).forEach((cardId) => Cards[cardId].playCard(newG))\n  return newG;\n}\n\nexport const CheckLevelComplete: (G: GameState) => boolean = (G: GameState) => {\n  for (const [targetPartIndex, targetPart] of G.targetParts.entries()) {\n    const currentPart = G.playerParts[targetPartIndex];\n    for (let i: number = 0; i < STEP_COUNT; i++) {\n      if (currentPart.steps[i] !== targetPart.steps[i]) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nexport const MyGame: Game = {\n  moves: {\n    playCard: (G: GameState, ctx: Ctx, handSlot: number) => {\n      const cardId = G.playerHand[handSlot];\n      const card = Cards[cardId];\n      if (!card) {\n        return INVALID_MOVE;\n      }\n      card.playCard(G); \n      // Remove the played card.\n      G.playerHand.splice(handSlot, 1);\n      // Add it to the play stack.\n      G.playerSchedule.unshift(cardId);\n      if (CheckLevelComplete(G)) {\n        G.hasClearedLevel = true;\n      }\n    },\n    removeCard: (G: GameState, ctx: Ctx, playerScheduleSlot: number) => {\n      if (G.playerSchedule.length - playerScheduleSlot <= G.startingSchedule.length) {\n        return INVALID_MOVE;\n      }\n\n      const removedCardId = G.playerSchedule[playerScheduleSlot];\n      if (!removedCardId) {\n        return INVALID_MOVE;\n      }\n\n      // Reset the turn and re-apply the cards in sequence. \n      const cleanState: GameState = SetupTurn(ctx.turn, G);\n      \n      // Add the removed card back to the hand.\n      cleanState.playerHand = [...G.playerHand];\n      cleanState.playerHand.unshift(removedCardId);\n\n      const inOrderStack = reverse([...G.playerSchedule]);\n      console.log(inOrderStack);\n      // Re-play the remaining cards in stack order.\n      for (const [replayedCardIndex, replayedCardId] of inOrderStack.entries()) {\n        if (G.playerSchedule.length - replayedCardIndex - 1 === playerScheduleSlot) {\n          // Ignore this removed card.\n          // We need to use the original index.\n          continue;\n        }\n        if (replayedCardIndex < G.startingSchedule.length) {\n          // Not removable...\n          continue;\n        }\n        const replayedCard = Cards[replayedCardId];\n        replayedCard.playCard(cleanState);\n        cleanState.playerSchedule.unshift(replayedCardId);\n      }\n      if (CheckLevelComplete(cleanState)) {\n        G.hasClearedLevel = true;\n      }\n      return cleanState;\n    },\n    clearSchedule: (G: GameState, ctx: Ctx) => {\n      if (CheckLevelComplete(G)) {\n        G.hasClearedLevel = true;\n      }\n      return SetupTurn(ctx.turn, G);\n    },\n    commitSchedule: (G: GameState, ctx: Ctx) => {\n      if (G.hasClearedLevel) {\n        ctx.events?.endTurn?.();\n      }\n    },\n  },\n  turn: {\n    onBegin: (G: GameState, ctx: Ctx) => SetupTurn(ctx.turn)\n  }\n};","import './App.css';\nimport { Client } from 'boardgame.io/react';\nimport Board from './component/Board';\nimport Intro from './component/Intro';\nimport { MyGame } from './Game';\n\nimport {useState} from 'react';\n\nconst GameClient = Client({ game: MyGame, board: Board, numPlayers: 1, debug: true });\n\nfunction App() {\n  const [showIntro, setShowIntro] = useState(true);\n  if (showIntro) {\n    return <Intro show={showIntro} acknowledge={() => setShowIntro(false)}/>;\n  }\n  return <GameClient/>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}